:root {
  /* Theme variables */
  --main-color: #004080;
  --accent-color: #007acc;
  --bg-color: #f9f9f9;
  --font-family: 'Helvetica Neue', sans-serif;
}

/* ========= Base / Reset ========= */
* { box-sizing: border-box; }

/* Prevent horizontal scroll on any device */
html { max-width: 100vw; overflow-x: hidden; scroll-behavior: smooth; }

body {
  margin: 0;
  font-family: var(--font-family);
  background-color: var(--bg-color);
  color: #333;
  line-height: 1.7;
  /* Responsive base font size (≈15–17.6px) */
  font-size: clamp(15px, 2.2vw, 17.6px);
  max-width: 100vw;
  overflow-x: hidden;
}

/* Make long words/URLs wrap instead of causing overflow */
h1, h2, h3, p, li, div { overflow-wrap: anywhere; }

/* ========= Container ========= */
.container {
  width: min(100%, 1200px);
  margin-inline: auto;
  padding: 1em;
  padding-left: clamp(12px, 4vw, 24px);
  padding-right: clamp(12px, 4vw, 24px);
}

/* ========= Header (Hero background) =========
   Note: If the image path differs in your project,
   update the URL below. Keep `center / cover` for good cropping. */
header.site-header {
  position: relative;
  color: #fff;
  background: url("../../../images/risanken_logo_16x9_noname.png") center / cover no-repeat;
  min-height: clamp(180px, 15vw, 420px);
  display: grid;           /* Center content both axes */
  place-items: center;
  text-align: center;
  padding-block: clamp(24px, 6vw, 56px);
}

/* Subtle overlay to keep text readable regardless of photo */
header.site-header::before {
  content: "";
  position: absolute; inset: 0;
  background: linear-gradient(to bottom, rgba(0,0,0,.35), rgba(0,0,0,.35));
}

header.site-header > * { position: relative; z-index: 1; }

header.site-header h1 {
  margin: 0;
  color: #fff;
  font-weight: bold;
  font-size: clamp(1.6rem, 4.5vw, 2.5rem);
}

/* Subtext (date & location) in header */
.header-sub {
  margin: 2.5em 0 0;
  font-size: 1.5em;
  line-height: 1.4;
  color: #fff;
}

/* ========= Footer ========= */
footer {
  background-color: var(--main-color);
  color: #fff;
  padding: 1.5em 0;
  text-align: center;
}

/* ========= Section blocks ========= */
.about {
  background-color: #f0f4f8;
  padding: 2em 1em;
  margin-bottom: 2em;
  border-radius: 8px;
}

.about h2 { margin-top: 0; }
.about p  { margin: 0.5em 0 0; }

.info-large {
  font-size: 1.3em;
  font-weight: bold;
  text-align: center;
}

h1, h2 { margin-top: 0; }

/* ========= Card ========= */
.card {
  background: #fff;
  padding: 1em;
  margin: 1em 0;
  border-radius: 8px;
  box-shadow: 0 2px 6px rgba(0,0,0,0.1);
}

/* ========= Button / Links ========= */
.button,
a.button {
  display: inline-block;
  margin-top: 0.5em;
  padding: 0.7em 1.1em;
  background-color: var(--accent-color);
  color: #fff;
  text-decoration: none;
  border-radius: 5px;
}

.button:hover { background-color: #005f99; }

.link-list { list-style: none; padding: 0; }
.link-list li { margin: 0.5em 0; }

.link-list a {
  color: var(--main-color);
  text-decoration: none;
}

.link-list a:hover { text-decoration: underline; }

/* ========= Access (Map & Text) =========
   Use CSS Grid to get 2 columns on desktop, stack on mobile. */
.access-flex {
  display: grid;
  grid-template-columns: 1.2fr 1fr;
  gap: clamp(12px, 3vw, 24px);
  align-items: start;
}

/* Map wrapper: keeps the iframe responsive using aspect-ratio */
.access-map .map-wrap {
  aspect-ratio: 16 / 9;
  width: 100%;
  overflow: hidden;
  border-radius: 8px;
  box-shadow: 0 1px 4px rgba(0,0,0,.08);
}

.access-map .map-wrap iframe {
  width: 100%;
  height: 100%;
  border: 0;
}

.access-map  { max-width: 600px; }
.access-text { max-width: 600px; }

/* ========= Speaker list ========= */
/* Outer list spacing */
.speaker-list {
  display: flex;
  flex-direction: column;
  gap: 1em;
  margin-top: 1em;
}

/* Each talk block */
.speaker {
  display: block;
  padding: 0.7em 1em;
}

/* Alternating background rows for readability */
.speaker:nth-child(even) { background: #dbe9fe; }
.speaker:nth-child(odd)  { background: #ffffff; }

/* One row contains time / name / title.
   Use CSS Grid to avoid fixed widths and overflow. */
.speaker-row {
  display: grid;
  grid-template-columns: 110px minmax(140px, 200px) 1fr; /* Desktop: 3 columns */
  align-items: start;
  column-gap: 18px; /* Widen time↔name */
}

/* Columns: unified definitions (no duplicates) */
.speaker-time {
  white-space: nowrap;
  font-weight: 600;
}

.speaker-name {
  font-weight: 600;
  /* Pull the title closer while keeping time↔name wider */
  margin-right: -8px; /* reduce space to the next column (title) */
}

.speak-title {
  cursor: pointer;
  position: relative;
  padding-right: 22px;          /* Space for the small arrow */
  margin-left: -4px;            /* fine-tune proximity to speaker name */
}

/* Detail panel (hidden by default, toggled by JS) */
.speak-detail {
  margin-top: 0.5em;
  padding: 0.7em 1em;
  background: #f8f8f8;
  border-left: 4px solid #b5e1f0;
  display: none;
}

/* Optional: small arrow indicating open/close state.
   Works with JS that toggles [aria-expanded]. */
.speak-title::after {
  content: "▾";
  position: absolute; right: 0; top: 0;
  line-height: 1;
  transform: translateY(2px) rotate(0deg);
  transition: transform .2s ease;
}

.speak-title[aria-expanded="true"]::after {
  transform: translateY(2px) rotate(180deg);
}

/* ========= Responsive tweaks ========= */
@media (max-width: 900px) {
  /* Access section stacks on narrower screens */
  .access-flex { grid-template-columns: 1fr; }
}

@media (max-width: 768px) {
  /* Speaker rows become a single column on mobile */
  .speaker-row { grid-template-columns: 1fr; }

  /* Reset negative adjustments in single-column layout */
  .speaker-name { margin-right: 0; }
  .speak-title  { margin-left: 0; }

  /* Slightly tighten card padding on small screens */
  .card { padding: 1em 0.8em; }
}

@media (max-width: 600px) {
  /* Keep text comfortably sized on very small screens */
  body { font-size: 90%; }
}